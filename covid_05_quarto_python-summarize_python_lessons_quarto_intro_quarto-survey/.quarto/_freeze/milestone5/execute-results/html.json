{
  "hash": "ec3a53cb90f1bf3e73d19407c9d72183",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Final report\nformat:\n  html:\n    code-fold: true\n    theme: cosmo\neditor: visual\n---\n\n::: {#setup .cell execution_count=1}\n``` {.python .cell-code}\n# Import packages \nimport pandas as pd\nfrom matplotlib import rcParams\nfrom plotnine import ggplot, aes, geom_line, scale_x_datetime, theme_classic, labs, theme, element_text, facet_wrap\nfrom mizani.breaks import date_breaks\nfrom mizani.formatters import date_format\n\n\n# Set some options\npd.set_option('mode.copy_on_write', True)\npd.set_option('display.max_columns', None)\nrcParams.update({'savefig.bbox': 'tight'})\n\n# Read data\ncovid = pd.read_csv(\"covid.csv\")\n\n```\n:::\n\n\n# About data\n\nIn this analysis, I'm going to use the data from [The COVID Tracking Project](https://covidtracking.com/), which describes the data as follows:\n\n> We collect, cross-check, and publish COVID-19 data from 56 US states and territories in three main areas: testing, hospitalization, and patient outcomes, racial and ethnic demographic information via The COVID Racial Data Tracker, and long-term-care facilities via the Long-Term-Care tracker. We compile these numbers to provide the most complete picture we can assemble of the US COVID-19 testing effort and the outbreak's effects on the people and communities it strikes.\n\n# Analysis\n\nFirst, let's take a look at it's structure:\n\n::: {#cell-table .cell execution_count=2}\n``` {.python .cell-code}\ncovid\n```\n\n::: {#table .cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>date</th>\n      <th>state</th>\n      <th>tests</th>\n      <th>cases</th>\n      <th>hospitalizations</th>\n      <th>deaths</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2020-01-13</td>\n      <td>WA</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2020-01-14</td>\n      <td>WA</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2020-01-15</td>\n      <td>WA</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2020-01-16</td>\n      <td>WA</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2020-01-17</td>\n      <td>WA</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>20775</th>\n      <td>2021-03-07</td>\n      <td>NaN</td>\n      <td>5726</td>\n      <td>146</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>20776</th>\n      <td>2021-03-07</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>20777</th>\n      <td>2021-03-07</td>\n      <td>NaN</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>20778</th>\n      <td>2021-03-07</td>\n      <td>NaN</td>\n      <td>305</td>\n      <td>305</td>\n      <td>0</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>20779</th>\n      <td>2021-03-07</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>20780 rows Ã— 6 columns</p>\n</div>\n```\n:::\n:::\n\n\nWhat's the median death by state?\n\n::: {#05368f7f .cell execution_count=3}\n``` {.python .cell-code}\ncovid.groupby('state')['deaths'].median().sort_values(ascending=False)\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\nstate\nCA    85.0\nTX    80.5\nFL    67.5\nIL    42.0\nNY    37.0\nGA    35.0\nPA    30.0\nMA    26.0\nOH    26.0\nNC    23.0\nNJ    23.0\nLA    22.0\nIN    21.0\nAZ    21.0\nMI    19.5\nTN    17.0\nSC    16.0\nMD    15.5\nMS    14.0\nVA    13.0\nAL    12.0\nMO    10.0\nMN    10.0\nAR    10.0\nWI     9.0\nKY     8.0\nNV     8.0\nIA     8.0\nCO     8.0\nOK     7.5\nWA     7.0\nNM     6.0\nCT     6.0\nRI     4.0\nUT     3.0\nNE     3.0\nOR     3.0\nID     2.5\nWV     2.0\nDE     2.0\nSD     1.0\nME     1.0\nNH     1.0\nND     1.0\nMT     1.0\nAK     0.0\nVT     0.0\nKS     0.0\nHI     0.0\nWY     0.0\nName: deaths, dtype: float64\n```\n:::\n:::\n\n\n@fig-plot1 shows the pattern from the deaths-cases ratio on time for the top six states with more deaths.\n\n::: {#cell-fig-plot1 .cell execution_count=4}\n``` {.python .cell-code}\n# which six states had more deaths?\nsum_deaths_ordered = covid. \\\ngroupby('state'). \\\nsum('deaths'). \\\nsort_values('deaths', ascending=False)\n\n# get the six state list \ntop_six = sum_deaths_ordered.head(6).index.values.tolist()\n\n# filter\ncovid = covid.loc[covid.state.isin(top_six)]\n\n# remove NA and negative values \ncovid = covid.dropna()\nsubset = covid.loc[(covid['deaths'] >= 0) & (covid['cases'] >= 0)]\n\n# create new column = deaths/cases ratio\nsubset['cases_death_ratio'] = (subset['deaths'] / subset['cases'])\nsubset['state'] = pd.Categorical(subset['state'], categories=top_six, ordered=True)\n\n# plot\n(\nggplot(subset, aes(x='date')) +\n  geom_line(aes(y='cases_death_ratio', group='state', color='state')) +\n  facet_wrap('state') +\n  theme_classic() +\n  scale_x_datetime(breaks=date_breaks(\"3 months\"), labels=date_format(\"%m-%Y\")) +\n  labs(y='Deaths/Cases', x='Date') +\n  theme(\n   axis_text_x = element_text(rotation=45)\n)\n).show()\n```\n\n::: {.cell-output .cell-output-display}\n![Deaths-cases ratio on time.](milestone5_files/figure-html/fig-plot1-output-1.png){#fig-plot1}\n:::\n:::\n\n\n",
    "supporting": [
      "milestone5_files/figure-html"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}